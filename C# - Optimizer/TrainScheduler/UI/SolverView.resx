<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAu
        IwAALiMBeKU/dgAAAAd0SU1FB+IIDgwjC2eWe1YAAAyNSURBVGhDpZp5cJXVGcZJEURRbO3YbabVqXXa
        Tmd0pmPbqe0foLn3fvdmudlYEpYIhIQQMARQQKtxdKyxEiJSq9altXX9ozCigoqAC0RgFA2MCFoU64Jb
        ECFhTXL6e849391vEvCdeebe857vO+d53/Oe9yz3DsnPHz0cnAVOB0OSRWUwFIwEZ4Jvuaq4oMsDZ7hn
        TgNWHwqFfh0MBsPBYED1fh8j/HpfVAYn08cw4GoQCme7yjynigs6Nax6IVfDanQUSGkYA/4D3g4G87/r
        6kXuVPvQu2pDjnA1TlDIKykN6yGQ0rB0yUI5Tj4QyB8F2YvxeBOf/wabwNfgWCgU7ADP8f1OMJVnfgHO
        4J30PvTdtR4Tyj75c0AGeVvOpgRqTBb355WRgcAVP4DMJIi9BHoi4ZCpqfJMc0PYTCz3THk4bG4uLTML
        olFTGYkYLxQyPHcctIM5jM6Fro+hrum4uD76JQ9Oc8WY+EowIHliezQkNoa9UM+8aZ55/q5C879VxebA
        uqg5tCFqbl8QNvMhfnBuk+lqmmc6GxvNO/WzzFNTqk1jcdREQqE+3v8ANAUCgdNd81ZcHwORV8ie6VRx
        ZYrnpUsWyjQ8ZhRen0nH+2dP8czG+wvN4Zeipre9xOLoKyXm4PqoWXJ1zACR752/II7j8+ab/Y1zTXtN
        jbm+tNSEGTnaWuN53vnA9ZE75lV2enFMGE5hMGFzFvF8LR0eu2Nh2Hz5fIJ4MnkZ1LYwkmHACcgfYkSE
        E5QPU7e6utoUe55C610ccwl9DOR56VWv5/J8ZfJkyjVhRb6WkOl+4MaI6XoxQTydfA/lOxalGuCT73Lk
        faOOoV8+bpwMEDqY3BfR1+DIu4pBTVhi/jI66FxydQSS/ZOXLtkAn7zmw+dXNaYY8N6sBjsCTTwbjY3E
        o2C4694K/WcnL6GgBaZf8sT9uTT6/LQJnvlsTe6w6WkvM71vXGP63l9plt0yPz6J/bDZObPeVBcUmA8a
        ZlvyCqHbKirMFHR7MOShqiqbpQilSH5+vs/BJy8np5KXoFAu7zfP02CZ54WOb7inMAd5ym/+yfR1bjem
        97gxps8sW7bMzCPbfIHH/bD5ePYcU0FqXQLp1VOmmFvLK0wRXldmOsoofcmzMpD+1mOAXdVBds/7grIf
        z8vqMSPwymplHJHN5vnet/9qzPEuiCdEBswtLrYG+CHTA7bUzDB1RUWmFEOuon7t1Kmm280T1a+cPEWj
        cJTUein990s+my6N/OjheOOnNNj5eEtBdvLbb4b8IUc7Jr29vWbp0qVmIovXExMnmVWQem1GrTkCUZFU
        OH0+5yprnDzvzwfhI0ZpLMaRMJY6DhnkKVvHgzOcKiZ6EMTJA+1pxpJ5zI7HijLI92yuMn0H9zjaMRH5
        7u5us2TJEhMhPCZECsx4DCHfmwcqK23Wkcc1N9LJC1onbmB9oN9tgcDl8n42zyvxaO4mDNCDQOT1kiXf
        3Nw8hBFoKS4Imf1ro2kTltF4q5Vw73XUE+SFtrY2GyKKe8X2C1dOtdmmo7YuJ3mNjvSPTJwoA76g7wsc
        PSviBPyULwNi4c+XDM9LwuFwHg09NnmsZ7cHKeRB3ycvOuoJ8ocPH7bfNQeS14FPCZk5GPQ6oZRO/kOM
        fJxQu2fCBLN8/HizqKREBmiFvswSQcQJJK9X+p6bvISJdBqNPF07ybMjkEy+t73U9O3fkUJe0HdJsgHy
        rMJmH0YcSSP/GbrphYU2zGYwuWvBNMr0K1Q6KhnkndpWaJJkkJc4A1bXuwyUIO8M+GpnCnlh48aNZu/e
        vXYS+wb0F/Pt06ebAhda2vBpgmsiK73S92xxApme98UpM8irzCQaSSPPzar2zDHiP0E+ZkDPp1tTPL97
        925ThAcjeLOEMJABnWzcksl3NTXZXanCRuUddTPtZL93/ASzq74+/kxJzIAF8MjueV9Qph7REJUBR8wx
        36GRVdrjpxtwYmOJ6dr5rzh5ya5du6wBLS0tppKMo3VAWwefvAy5uazcngsWRkvsyHyFgU+yqOnsoDmg
        57p5LsmA7J5HbDmbEuh8bBcQMsHdFdGQ6U7avIm8JnVXe6PpPfa1JS/xDdi2bRsh1GqaMOAAZERK2MYE
        hpRdeXfi7QOQlxFa6GSc1gk9p1CK7VCD9XDIRV5zN2XPlEEe5GFAQwEnrfdWFqeQF05sIhN9uDqeSn0D
        tmzZYteB5Cwk7GUPFPViK/BiQuw2thJvsT/y631oX6R5gQFROOQ6rekcn3GgSSEvPQZciteOrLu7MIO8
        HREtZp0d0O+LG7B582bT2toaN0CTcvm48XY+aEX+M3uhG8vLzWwMqWK+vMuc8MlrNNqn1yjMDrED/pV4
        JYt4OX5KPMN8ZVbyEsifCTp0zj3wQhp5H1smmd59m8yOjtdNISlQIZScRjdMm2bjXltnhYrCRqlVJzOl
        0Acrq+LklYUerrIL2Ts472xHw4p4OX7iKb79k/eFxhaxGvdte7gokzxQeu1+qcxsX0GIFIZN+8trzbI7
        Ws2V7CxXsA+qZ1SuLSm1K7JP3ifczLbhWsJJk1nGaZTcQvaI696KeDl+CfKuQik0K3k9BIZySjqfBt9v
        nh02XYxAJvnYKv3Fc1EzqcIzj7RUmLbFJdbrYwmRm8rKbFwnk/ehlXkcGWgSz8ngaj458GsVrnA0cpOX
        UNAsz+p5dPEczHBW02jPytYC0+NGIZm89knS6cQ2k5V7cX3YNOD53cS3QkXkX6uttYSTDdDmbTtrwT8I
        o3tYC8ZhAH3tAnaCihfITl6CYjAXW0Mhfzp4MFoY6lvPweY4EzqdvNDxKAsZWau0KGTTqNYB3/PXERqt
        FWPj5BVCOuwo7nXs3FFXpxVY1y01zKUBydtyNiVIIS+dhIbPAWsKIyGzqq3A3kokkxdUvuu6iM33WsgU
        037Y3ErmuQXI6/6EFVTWMbO2sEjvrcf72mkOSB5kXZlTyDt1XGj8PPLzCuK7r2Ve2HzwZGx9SMbnz0Zt
        GKWvA0qhWqBWTJ5s3mtosKPzEZu5dZzK3AZuF9Bt3WDI57zYyvC8L5Rtw+yRdKV4PZ11VpZ5ZutDscOO
        4J8ZdDM3kznwJmHxCeuAQkSeXlN9pb1m1MTVYV67UJyh68Z14Od+H6A/8ko84jjCqQf2PLrkhoczCkM8
        z9OF7pbxpSGzZ0VxnLzmhi62IGSh8+8LU6dZAxQyWg+erq62WUrEaSOo68W0Pvojr0VMz2W92MrpeWDJ
        J9djxAWQ+Kjtmoi9FxV5ZSfdC80gLNo5xOviajLe1qHGn7DvE/MyDu6z1E5aHwOR1/kllnj4MljyWc8M
        nhfQ5L5Pp7Z9q4vjZ4bki61X2RroNKbDi8hrPjzNho73TmDAb5L6GIi86hPkJRT8i60Bwwa4mpioLD0k
        biouDKVcevkGaHU9MHeuPY0phERe5wHFPwZsInhE6OQ974tTnrTnVXb6c4jf5iIO/ukG+BdbChsZsYGD
        /d/Z82sSQ34f8+j3vH/q5CUoc11sDeh5V09WCizOZsCsoqKjn8yZ8+qxefPv31ozow3SX4k4I/YU0MXV
        NyKfTWeVYDDk1bCey8OARTKAOfA15NeySt+wqM67MxwKPXBLRbl2s0MhfDafvwM/4rvN4eCUyLt6XWwl
        0qhEDwI1PGDYAEteeghFPS+0+d7rwz97drk3LOJd/m1i+yL0f4RwI3gc6NeYg+h+694diLzqc3le5FWX
        cbHlN9wf+bjnXZVuL3Ry+wkoIK7/AtGXwcdAu0oX76FnwMJA4Irv8+4peV6CTuTjWdNXnlTMg5SGITYf
        7AdaUTlJBffw+QSYK4+Dcxmhs4LB/B/m5485JfKuPoW8dFJ+I/ISiBaBf+L9OsheApRah4ELXd3t4BXw
        X0ZLk9e9GROVQU7yEnQ+eT2TSPkUdDgeiHxG2EhcvTwxiv3R9zDgYkjWgAfBdtAJFEZHgDZqd2PUee51
        K66NnORdfQp56eLiKvojn9Xzrl6N6bCjXy33AoWQCH+Gbiufd2HUdEKHUcnXb2x5+iXSF9eG38dgPB//
        K0NcUOS62MpJXoLOkhcgqtPaM5BuBvl8/zFE1dlIir9EdznlXL97ZfW8BF1uzyO2nE0JBuV5B87MNgvp
        HnUEn0qfE/H238Cb6LR4HQJ/cE0k9zGYsLF9SJcslDV3s15s+Q3n8nxKw05tBZK3ghNAqVP/lXgDY+4D
        VcDmbN4RNOqD8XxGHxK9A3QUzjjQqGE1muvfK2pYhumZDK9A0gMYEawAF2FAyk9Aeh7Y0AKn1IfKQGmY
        TejoYf8HLO4V1F1l93QAAAAASUVORK5CYII=
</value>
  </data>
</root>