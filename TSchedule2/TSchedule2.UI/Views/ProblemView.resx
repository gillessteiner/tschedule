<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>